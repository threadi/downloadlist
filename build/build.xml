<?xml version="1.0" encoding="UTF-8"?>
<project name="download-list-block-with-icons" basedir="." default="help">

	<!-- Include config file containing  -->
	<loadproperties srcFile="build.properties" />

	<!-- Sets variables which can later be used. -->
	<property name="src.dir" location="../" />
	<property name="build.dir" location="../releases" />
	<property name="log.dir" location="./" />

	<!-- check for necessary vars -->
	<fail unless="plugin.slug" />
	<fail unless="plugin.version" />
	<fail unless="npm.path" />
	<fail message="Do not run as root!">
		<condition>
			<equals arg1="root" arg2="${user.name}"/>
		</condition>
	</fail>

	<!-- install npm -->
	<target name="npm-install">
		<delete file="${log.dir}/npm-install.txt"/>
		<exec dir="${src.dir}" failonerror="true" executable="${npm.path}" output="${log.dir}/npm-install.txt">
			<arg line="i"/>
		</exec>
	</target>

	<!-- build the Blocks via npm -->
	<target name="npm-build" depends="npm-install">
		<delete file="${log.dir}/npm-build.txt"/>
		<exec dir="${src.dir}" failonerror="true" executable="${npm.path}" output="${log.dir}/npm-build.txt">
			<arg line="run build"/>
		</exec>
	</target>

	<!-- generate json-translations -->
	<target name="json-translations" depends="npm-build">
		<exec dir="${src.dir}" failonerror="true" executable="wp">
			<arg line="i18n make-json languages --no-purge"/>
		</exec>
	</target>

	<!-- set version number in plugin-file for the release -->
	<target name="setVersionNumber">
		<delete file="${build.dir}/${plugin.slug}-release.php"/>
		<copy file="${src.dir}/${plugin.slug}.php" tofile="${src.dir}/${plugin.slug}-release.php"/>
		<replace file="${src.dir}/${plugin.slug}-release.php">
			<replacefilter token="@@VersionNumber@@" value="${plugin.version}" />
		</replace>
	</target>

	<!-- init project -->
	<target name="init" description="initialize the project" depends="npm-install,npm-build" />

	<!-- create release-zip -->
	<target name="build" description="builds a new release" depends="init,npm-build,setVersionNumber,json-translations">
		<delete file="${build.dir}/${plugin.slug}_${plugin.version}.zip"/>
		<zip destfile="${build.dir}/${plugin.slug}_${plugin.version}.zip">
			<zipfileset dir="${src.dir}/block" prefix="${plugin.slug}/block" />
			<zipfileset dir="${src.dir}/languages" prefix="${plugin.slug}/languages" />
			<zipfileset dir="${src.dir}/templates" prefix="${plugin.slug}/templates" />
			<zipfileset dir="${src.dir}" includes="uninstall.php,readme.txt,block.json" prefix="${plugin.slug}" />
			<zipfileset dir="${src.dir}" includes="${plugin.slug}-release.php" fullpath="${plugin.slug}/${plugin.slug}.php" />
		</zip>
		<delete file="${src.dir}/${plugin.slug}-release.php"/>
	</target>

	<!-- upload release-zip to WordPress Repository -->
	<target name="release" description="builds and upload a new release" depends="build">
		<delete file="${log.dir}/svn1.log" />
		<delete file="${log.dir}/svn2.log" />
		<delete file="${log.dir}/svn3.log" />
		<delete file="${src.dir}/svn/svn.sh" />
		<fail unless="svn.path" />
		<fail unless="svn.username" />
		<fail unless="svn.password" />
		<exec executable="${svn.path}">
			<arg value="co" />
			<arg value="https://plugins.svn.wordpress.org/${plugin.slug}" />
			<arg value="${src.dir}/svn/" />
		</exec>
		<delete quiet="false">
			<fileset dir="${src.dir}/svn/trunk/" includes="**/*" />
			<dirset dir="${src.dir}/svn/trunk/" includes="**" />
		</delete>
		<mkdir dir="${src.dir}/svn/trunk/" />
		<unzip src="${build.dir}/${plugin.slug}_${plugin.version}.zip" dest="${src.dir}/svn/trunk/">
			<globmapper from="${plugin.slug}/*" to="*"/>
		</unzip>
		<exec executable="${svn.path}" error="${log.dir}/svn1.log">
			<arg value="add" />
			<arg value="${src.dir}/svn/trunk/*" />
		</exec>

		<!-- create helper bash as svn could not be run with credentials directly in ant -->
		<echo file="${src.dir}/svn/svn.sh" append="true">
#!/bin/bash
cmd="$1 ci $2 -m '$3' --username $4 --password '$5'"
eval $cmd
		</echo>

		<!-- make it executable -->
		<chmod file="${src.dir}/svn/svn.sh" perm="775" />

		<!-- call it: this release the file -->
		<exec executable="${src.dir}/svn/svn.sh" error="${log.dir}/svn2.log">
			<arg value="${svn.path}" />
			<arg value="${src.dir}/svn/" />
			<arg value="Release ${plugin.version}" />
			<arg value="${svn.username}" />
			<arg value="${svn.password}" />
		</exec>

		<!-- copy all files in version-tag -->
		<exec executable="${svn.path}" error="${log.dir}/svn3.log">
			<arg value="copy" />
			<arg value="${src.dir}/svn/trunk" />
			<arg value="${src.dir}/svn/tags/${plugin.version}" />
		</exec>
	</target>

	<!-- show help -->
	<target name="help">
		<java classname="org.apache.tools.ant.Main">
			<arg value="-projecthelp" />
			<arg value="-buildfile" />
			<arg value="build.xml" />
		</java>
	</target>

</project>
